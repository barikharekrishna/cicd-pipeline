pipeline {
   agent any
   environment {
       CONTAINER_NAME="jenkins-pipeline"
       CONTAINER_TAG="latest"
       DOCKER_HUB_USER="debasis4"
       HTTP_PORT="8090"
   }
   stages {

     stage('Checkout') {
       steps {
        checkout scm
       }
     }

     stage('Build'){
       steps {
        sh "mvn clean install"
       }
     }

     stage("Image Prune"){
       steps {
        imagePrune(CONTAINER_NAME)
       }
     }

     stage('Image Build'){
      steps {
        imageBuild(CONTAINER_NAME, CONTAINER_TAG)
      }
     }

     stage('Push to Docker Registry'){
       steps {
        withCredentials([usernamePassword(credentialsId: 'dockerHubAccount', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            pushToImage(CONTAINER_NAME, CONTAINER_TAG, USERNAME, PASSWORD)
         }
        }
     }

     stage('Run App'){
       steps {
        runApp(CONTAINER_NAME, CONTAINER_TAG, DOCKER_HUB_USER, HTTP_PORT)
       }
     }



    stage ( 'imagePrune'){
      steps{
       script{
       try {
        sh "docker image prune -f"
        sh "docker stop $containerName"
      }  catch(error){}
      }
      }
} 

     stage ( 'imageBuild' ) {
      steps {
      sh "docker build -t $containerName:$tag  -t $containerName --pull --no-cache ."
      echo "Image build complete"
      }
    }

     stage ( 'pushToImage') {
      steps {
       sh "docker login -u $dockerUser -p $dockerPassword"
       sh "docker tag $containerName:$tag $dockerUser/$containerName:$tag"
       sh "docker push $dockerUser/$containerName:$tag"
     echo "Image push complete"
      }
}

     stage ( 'runApp' ){
      steps {
       sh "docker pull $dockerHubUser/$containerName"
       sh "docker run -d --rm -p $httpPort:$httpPort --name $containerName $dockerHubUser/$containerName:$tag"
      echo "Application started on port: ${httpPort} (http)"
      }
     }
   }
}
